package view;

import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.GridPane;
import javafx.scene.text.Text;
import model.grains.Grain;

/**
 * 
**/

public class GrainInputView extends GridPane
{
	// GUI Labels
	private static final String GRAINS         = "Grains";
	private static final String GRAIN_NUMBER   = "#";
	private static final String LENGTH         = "Length";
	private static final String OUTER_DIAMETER = "Outer Diameter";
	private static final String INNER_DIAMETER = "Inner Diameter";
	private static final String BURNING_ENDS   = "Burning Ends";
	
	private static final String OUTER_DIAMETER_PROMPT = "Enter grain outer diameter (Must be positive): ";
	private static final String INNER_DIAMETER_PROMPT = "Enter grain inner diameter (Must be positive): ";
	private static final String LENGTH_PROMPT         = "Enter grain length (Must be positive): ";
	private static final String BURNING_ENDS_PROMPT   = "Enter grain number of burning ends (Must be 0, 1, or 2): ";
	
	
	
	// GUI Components
	private Text grainText;
	private TableView<Grain> table;
	
	
	
	@SuppressWarnings("unchecked")
	public GrainInputView ()
	{
		super();
		
		grainText = new Text(GRAINS);
		GridPane.setConstraints(grainText, 0, 0);
		this.getChildren().add(grainText);
		
		table = new TableView<Grain>();
		GridPane.setConstraints(table, 0, 1);
		this.getChildren().add(table);
		
		TableColumn<Grain, String> numberCol = new TableColumn<Grain, String>(GRAIN_NUMBER);
		numberCol.setPrefWidth(10);
		//numberCol.setResizable(false);
        numberCol.setCellValueFactory(new PropertyValueFactory<Grain,String>("grainNumber"));

        TableColumn<Grain, String> lengthCol = new TableColumn<Grain, String>(LENGTH);
        lengthCol.setResizable(false);
        lengthCol.setCellValueFactory(new PropertyValueFactory<Grain,String>("length"));
		
        TableColumn<Grain, String> outerDCol = new TableColumn<Grain, String>(OUTER_DIAMETER);
        outerDCol.setResizable(false);
        outerDCol.setCellValueFactory(new PropertyValueFactory<Grain,String>("outerDiameter"));
        
        TableColumn<Grain, String> innerDCol = new TableColumn<Grain, String>(INNER_DIAMETER);
        innerDCol.setResizable(false);
        innerDCol.setCellValueFactory(new PropertyValueFactory<Grain,String>("innerDiameter"));
        
        TableColumn<Grain, String> burningEndsCol = new TableColumn<Grain, String>(BURNING_ENDS);
        burningEndsCol.setResizable(false);
        burningEndsCol.setCellValueFactory(new PropertyValueFactory<Grain,String>("burningEnds"));
        
        table.getColumns().addAll(numberCol, lengthCol, outerDCol, innerDCol, burningEndsCol);
	}
	
	
	
	
	
	
	
} // class GrainInputView
