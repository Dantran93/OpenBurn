import java.util.List;

import com.sun.javafx.geom.BaseBounds;
import com.sun.javafx.geom.transform.BaseTransform;
import com.sun.javafx.jmx.MXNodeAlgorithm;
import com.sun.javafx.jmx.MXNodeAlgorithmContext;
import com.sun.javafx.sg.prism.NGNode;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.Node;
import javafx.scene.chart.Axis;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.ScatterChart;
import javafx.scene.chart.XYChart;
import javafx.scene.chart.XYChart.Series;

/**
 * 
 * 
 * 
 * 
**/

public class GraphView extends Node
{
	/**
	 * 
	**/
	
	public GraphView (String chartName, String xAxisName, String yAxisName)
	{
		NumberAxis xAxis = new NumberAxis();
		xAxis.setLabel(xAxisName);
		
		NumberAxis yAxis = new NumberAxis();
		yAxis.setLabel(yAxisName);
		
		ScatterChart chart = new ScatterChart(xAxis, yAxis);
	    chart.setTitle(chartName);
		
		
	} // GraphView Constructor (String, String, String, List<SimulationResults>)

	
	
	
	
	
	
	
	
	
	/**** Stub methods to fulfill the Node extension, no implementation needed ****/
	
	@Override
	protected boolean impl_computeContains (double arg0, double arg1) { return false; }

	@Override
	public BaseBounds impl_computeGeomBounds (BaseBounds arg0, BaseTransform arg1) { return null; }

	@Override
	protected NGNode impl_createPeer () { return null; }

	@Override
	public Object impl_processMXNode (MXNodeAlgorithm arg0, MXNodeAlgorithmContext arg1) { return null; }
	
} // class ResultsScatterPlot
