package model;

import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.scene.control.TextField;

public class NumberTextField extends TextField
{
	public NumberTextField ()
	{
		super();
		
		this.textProperty().addListener(new ChangeListener<String>()
		{
			@Override
			public void changed (ObservableValue<? extends String> observable, String oldValue, String newValue)
			{
				if (!strIsNumeric(newValue) || numOccurrences(newValue, '.') == 2)
					setText(oldValue);
			}
		});
		
	}
	
	
	
	public NumberTextField (double value)
	{
		this();
		setText(String.valueOf(value));
	}
	
	
	
	/**
	 * 
	**/
	
	public double getValue ()
	{
		return Double.parseDouble(getText());
	}
	
	
	
	/**
	 * 
	**/
	
	public void setValue (double newValue)
    {
        this.setText(String.valueOf(newValue));
    }
	
	
	
	/**
	 * strIsNumeric()
	 * 
	 * Purpose:
	 * 
	 * Parameters:
	 * 
	 * Returns: 
	**/
	
	private boolean strIsNumeric (String s)
    {
		int charCode;
        for (int i = 0; i < s.length(); i++)
        {
        	charCode = (int)(s.charAt(i));
        	if (!((charCode < 58 && charCode > 47) || charCode == 46))
        		return false;
        }
		
        return true;
    } // strIsNumeric()
	
	
	
	/**
	 * numOccurrences()
	 * 
	 * Purpose: Checks the contents of the given string for the
	 * 		given character and counts the number of times the
	 * 		character is found. The total is returned.
	 * 
	 * Parameters:
	 * 		String s -- The string to check.
	 * 		char c -- The character to find in the string.
	 * 
	 * Returns: int. The number of occurrences of the character
	 * 		in the string.
	**/
	
	private int numOccurrences (String s, char c)
    {
        int numOccurrences = 0;
        for (int i = 0; i < s.length(); i++)
        	if (s.charAt(i) == c)
        		numOccurrences++;
        return numOccurrences;
    } // numOccurrences()
	
} // class NumberTextField
